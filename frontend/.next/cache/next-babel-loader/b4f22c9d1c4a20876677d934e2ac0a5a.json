{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"/home/imshaiksaif/Documents/social-media-scraper/frontend/components/Page.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './ScrapeContext';\n\nfunction useScrapes() {\n  _s();\n\n  var _useState = useState({}),\n      scrapes = _useState[0],\n      setScrapes = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('Mounting or Updating');\n                _context.next = 3;\n                return fetch('http://localhost:2093/data');\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context.sent;\n                console.log(data);\n                setScrapes(data);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  return setScrapes;\n}\n\n_s(useScrapes, \"1rdW67FzIAcvzUBdClnxTTII8n0=\");\n\nexport default function Page(_ref) {\n  _s2();\n\n  var children = _ref.children;\n  var scrapes = useScrapes();\n  return __jsx(ScrapeProvider, {\n    value: {\n      scrapes: scrapes\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_s2(Page, \"y/v+XUxYOfklPgp4eNttmqxg3vE=\", false, function () {\n  return [useScrapes];\n});\n\n_c = Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/home/imshaiksaif/Documents/social-media-scraper/frontend/components/Page.js"],"names":["useEffect","useState","ScrapeProvider","useScrapes","scrapes","setScrapes","fetchData","console","log","fetch","res","json","data","Page","children"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACUF,QAAQ,CAAC,EAAD,CADlB;AAAA,MACbG,OADa;AAAA,MACJC,UADI;;AAEpBL,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCM,SADD;AAAA;AAAA;;AAAA;AAAA,4EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AADF;AAAA,uBAEoBC,KAAK,CAAC,4BAAD,CAFzB;;AAAA;AAEQC,gBAAAA,GAFR;AAAA;AAAA,uBAGqBA,GAAG,CAACC,IAAJ,EAHrB;;AAAA;AAGQC,gBAAAA,IAHR;AAIEL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAP,gBAAAA,UAAU,CAACO,IAAD,CAAV;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAQdN,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAUA,SAAOD,UAAP;AACD;;GAbQF,U;;AAeT,eAAe,SAASU,IAAT,OAA4B;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACzC,MAAMV,OAAO,GAAGD,UAAU,EAA1B;AACA,SACE,MAAC,cAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAPA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBU,QAAvB,CALF,CADF;AASD;;IAXuBD,I;UACNV,U;;;KADMU,I","sourcesContent":["import { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './ScrapeContext';\n\nfunction useScrapes() {\n  const [scrapes, setScrapes] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      console.log('Mounting or Updating');\n      const res = await fetch('http://localhost:2093/data');\n      const data = await res.json();\n      console.log(data);\n      setScrapes(data);\n    }\n    fetchData();\n  }, []);\n  return setScrapes;\n}\n\nexport default function Page({ children }) {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider\n      value={{\n        scrapes,\n      }}\n    >\n      <div className=\"page\">{children}</div>\n    </ScrapeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/imshaiksaif/Documents/social-media-scraper/frontend/components/Page.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './ScrapeContext';\n\nfunction useScrapes() {\n  const {\n    0: scrapes,\n    1: setScrapes\n  } = useState({});\n  useEffect((async () => {\n    console.log('Mounting or Updating');\n    const res = await fetch('http://localhost:4444/data');\n    const data = await res.json();\n    console.log(data);\n    setScrapes(data);\n  })(), []);\n  return scrapes;\n}\n\nconst {\n  0: scrapes,\n  1: setScrapes\n} = useState({});\nuseEffect(() => {\n  fetch('http://localhost:4444/data').then(results => results.json()).then(data => {\n    setUser(data);\n  });\n}, []);\nexport default function Page({\n  children\n}) {\n  const scrapes = useScrapes();\n  return __jsx(ScrapeProvider, {\n    value: {\n      scrapes\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, children));\n}","map":{"version":3,"sources":["/home/imshaiksaif/Documents/social-media-scraper/frontend/components/Page.js"],"names":["useEffect","useState","ScrapeProvider","useScrapes","scrapes","setScrapes","console","log","res","fetch","data","json","then","results","setUser","Page","children"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CACP,CAAC,YAAY;AACXM,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAL,IAAAA,UAAU,CAACK,IAAD,CAAV;AACD,GAND,GADO,EAQP,EARO,CAAT;AAUA,SAAON,OAAP;AACD;;AAED,MAAM;AAAA,KAACA,OAAD;AAAA,KAAUC;AAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,SAAS,CAAC,MAAM;AACdS,EAAAA,KAAK,CAAC,4BAAD,CAAL,CACGG,IADH,CACQC,OAAO,IAAIA,OAAO,CAACF,IAAR,EADnB,EAEGC,IAFH,CAEQF,IAAI,IAAI;AACZI,IAAAA,OAAO,CAACJ,IAAD,CAAP;AACD,GAJH;AAKD,CANQ,EAMN,EANM,CAAT;AAQA,eAAe,SAASK,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AACzC,QAAMZ,OAAO,GAAGD,UAAU,EAA1B;AACA,SACE,MAAC,cAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBY,QAAvB,CALF,CADF;AASD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './ScrapeContext';\n\nfunction useScrapes() {\n  const [scrapes, setScrapes] = useState({});\n  useEffect(\n    (async () => {\n      console.log('Mounting or Updating');\n      const res = await fetch('http://localhost:4444/data');\n      const data = await res.json();\n      console.log(data);\n      setScrapes(data);\n    })(),\n    []\n  );\n  return scrapes;\n}\n\nconst [scrapes, setScrapes] = useState({});\n\nuseEffect(() => {\n  fetch('http://localhost:4444/data')\n    .then(results => results.json())\n    .then(data => {\n      setUser(data);\n    });\n}, []);\n\nexport default function Page({ children }) {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider\n      value={{\n        scrapes,\n      }}\n    >\n      <div className=\"page\">{children}</div>\n    </ScrapeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}